]/**
 * Purpose - Our first TeleOp code; will be used at Scrimmage.
 * Revision History:
 *      - 1: 11/6/19
 *      - 2: 11/15/19
 *      - 3: 11/18/19
 */

package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;


//@Disabled
public class Syborgs_TeleOp extends OpMode
{
    //Drive System
    private static DcMotor FL, FR, BL, BR, MTMotor;
    private double LY, RY, LT, RT;
    private static Servo claw;

    //Variables for reversing driving controls
    private boolean driveBackwards = false;
    private ElapsedTime eTime = new ElapsedTime();

    //Intake System


    //Arm system
    private static DcMotor elevator, elevator2;
    private CRServo AutonomousArm;
    private double elevate, clampOpen;

    @Override
    public void init()
    {
        //Mapping drive system hardware (authors Tony and Harish do not have access to the RC, and therefore, they do not know the names. Please provide the missing details)
        MTMotor = hardwareMap.dcMotor.get("type name here");
        FL = hardwareMap.dcMotor.get("type name here");
        FR = hardwareMap.dcMotor.get("type name here");
        BL = hardwareMap.dcMotor.get("type name here");
        BR = hardwareMap.dcMotor.get("type name here");
        elevator2 = hardwareMap.dcMotor.get("type name here");
        elevator = hardwareMap.dcMotor.get("type name here");
        claw = hardwareMap.get(Servo.class, "type name here");
        AutonomousArm = hardwareMap.get(CRServo.class, "type name here");





        //Reverse one wheel side

        FL.setDirection(DcMotorSimple.Direction.FORWARD);
        BL.setDirection(DcMotorSimple.Direction.FORWARD);
        FR.setDirection(DcMotorSimple.Direction.REVERSE);
        BR.setDirection(DcMotorSimple.Direction.REVERSE);

        //Immediately stop

        FL.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        BL.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        FR.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        BR.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        //Mapping intake system hardware


        elevator.setDirection(DcMotorSimple.Direction.REVERSE);
        elevator2.setDirection(DcMotorSimple.Direction.REVERSE);


        //Immediately stop
        elevator.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        elevator2.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        //Mapping intake system hardware




    }

    @Override
    public void loop()
    {
        //Controller 1 inputs
        LY = -gamepad1.left_stick_y;
        RY = -gamepad1.right_stick_y;
        LT = gamepad1.left_trigger;
        RT = gamepad1.right_trigger;




        //Switch mode
        if(gamepad1.y)
        {
            driveBackwards = !driveBackwards;
            if(driveBackwards)
            {
                FR.setDirection(DcMotorSimple.Direction.FORWARD);
                BR.setDirection(DcMotorSimple.Direction.FORWARD);
                FL.setDirection(DcMotorSimple.Direction.REVERSE);
                BL.setDirection(DcMotorSimple.Direction.REVERSE);
            }
            else
            {
                FL.setDirection(DcMotorSimple.Direction.FORWARD);
                BL.setDirection(DcMotorSimple.Direction.FORWARD);
                FR.setDirection(DcMotorSimple.Direction.REVERSE);
                BR.setDirection(DcMotorSimple.Direction.REVERSE);
            }
            eTime.reset();

            //Slow the tick, preventing spamming.
            while(eTime.time() < .3);
        }

        //Tell user which side is front
        telemetry.addData("ModeL ", (driveBackwards ? "arm front" : "wires front"));

        //Reverse inputs if on backwards mode
        if(driveBackwards)
        {
            RY = -gamepad1.left_stick_y;
            LY = -gamepad1.right_stick_y;
        }

        //Mecanum wheel movement
        FL.setPower(LY + RT - LT);
        BL.setPower(LY - RT + LT);
        FR.setPower(RY + LT - RT);
        BR.setPower(RY - LT + RT);

        //Controller 2 inputs

        elevator.setPower(-gamepad2.left_stick_y);
        elevator2.setPower(-gamepad2.left_stick_y);

        //Intake control
        if(gamepad2.a)
        {
            elevator.setPower(-0.3);

            elevator2.setPower(-0.3);

        }
        else if (gamepad2.b)
        {
            elevator.setPower(0.3);

            elevator2.setPower(0.3);
        }

        //Small movements with the Arm Controller's dpad; useful for minor adjustments
        if(gamepad1.dpad_up)
        {
            FL.setPower(.4);
            FR.setPower(.4);
            BL.setPower(.4);
            BR.setPower(.4);
        }
        else if(gamepad1.dpad_down)
        {
            FL.setPower(-.4);
            FR.setPower(-.4);
            BL.setPower(-.4);
            BR.setPower(-.4);
        }
        else if(gamepad2.dpad_left)
        {
            FL.setPower(-.4);
            FR.setPower(.4);
            BL.setPower(-.4);
            BR.setPower(.4);
        }
        else if(gamepad1.dpad_right)
        {
            FL.setPower(.4);
            FR.setPower(-.4);
            BL.setPower(.4);
            BR.setPower(-.4);
        }
        if (gamepad2.x) {
            MTMotor.setPower(0.3);
        }
        else if (gamepad2.y) {
            MTMotor.setPower(-0.3);
        }
        if (gamepad2.left_bumper)
        {
            claw.setPosition(0); //Test the values
        }
        //Servo close Position
        else if (gamepad2.right_bumper)
        {
            claw.setPosition(.5); //Test the values
        }
        if (gamepad2.dpad_up)
        {
            AutonomousArm.setPower(0.3); //Test the values
        }
        //Servo close Position
        else if (gamepad2.dpad_down)
        {
            AutonomousArm.setPower(-0.3); //Test the values
        }

    }

}


